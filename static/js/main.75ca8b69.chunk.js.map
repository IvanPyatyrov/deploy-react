{"version":3,"sources":["assets/images/user.png","api/api.js","redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/Preloader.svg","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/login/Login.jsx","redux/app-reducer.js","hoc/withSuspense.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","components/common/preloader/Preloader.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","active","News","props","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","alt","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","Component","compose","connect","usersAPI","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Input","error","style","formSummaryError","initialized","appReducer","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","reason","promise","initializeApp","addEventListener","removeEventListener","from","path","render","withRouter","app","Promise","all","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","preloader","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","createField","validators","text","value","maxLengthCreator","maxLength","length","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","stopSubmit","reject","newPost","postId"],"mappings":"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","file":"static/js/main.75ca8b69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.385e1427.png\";","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"c6faaead-63cd-45b2-b791-13a678c84f6f\"\r\n    }\r\n});\r\n\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n\r\n}","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Vanya'},\r\n        {id: 2, name: 'Sasha'},\r\n        {id: 3, name: 'Nikita'},\r\n        {id: 4, name: 'Victor'},\r\n        {id: 5, name: 'Andrey'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__257Vv\"};","module.exports = __webpack_public_path__ + \"static/media/Preloader.f4d7875d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__17qw9\",\"item\":\"Navbar_item__X2LE1\",\"active\":\"Navbar_active__1JHrE\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/Profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/Dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/News\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/Music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/Settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {userAPI as usersAPI, userAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count};\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching};\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await userAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={\"/Profile/\" + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}\r\n                             alt=\"user\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id )} onClick={() => {\r\n                                unfollow(user.id);\r\n\r\n\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                follow(user.id);\r\n\r\n                            }}>Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setCurrentPage, toggleFollowingProgress,\r\n        requestUsers: requestUsers})\r\n) (UsersContainer)\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n    return <header className={s.header}>\r\n        <img src=\"https://im0-tub-ru.yandex.net/i?id=b62f41f00ecbd9afaee942529b76a186&n=13\"/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\nexport default connect (mapStateToProps, {logout}) (HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} type={\"text\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={null} component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n            {props.captchaUrl && <img src={props.captchaUrl} alt=\"\"/>}\r\n            {props.captchaUrl && <Field placeholder={\"Symbols from image\"} validate={required} component={Input} name={\"captcha\"} />}\r\n\r\n            {props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login}) (Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise  = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    };\r\n}","import React, {Component, Suspense} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/login/Login\";\nimport {connect} from \"react-redux\";\nimport {Redirect, Route, withRouter} from \"react-router-dom\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\n\nclass App extends Component {\n    catchAllUnhandledErrors = (reason, promise) => {\n        //alert(\"Some error occured\");\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <switch>\n                        <Redirect from=\"/\" to=\"/profile\"/>\n                        <Route path=\"/Dialogs\" render={withSuspense(DialogsContainer)}/>\n                        <Route path=\"/Profile/:userId?\" render={withSuspense(ProfileContainer)}/>\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                        <Route path=\"/login\" render={() => <LoginPage/>}/>\n                        <Route path=\"/News\" render={() => <News/>}/>\n                        <Route path=\"/Music\" render={() => <Music/>}/>\n                        <Route path=\"/Settings\" render={() => <Settings/>}/>\n                    </switch>\n                </div>\n            </div>\n        )\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\"\n\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import preloader from \"../../../assets/images/Preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader} alt=\"preloader\"/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n            {...props}\r\n            /> {text}\r\n    </div>\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3jAhc\",\"error\":\"FormsControls_error__OeAsa\",\"formSummaryError\":\"FormsControls_formSummaryError__1TZV3\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength)  return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__uJRHS\",\"pageNumber\":\"Paginator_pageNumber__yOj7y\",\"selectedPage\":\"Paginator_selectedPage__3ZxOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3UDzE\",\"loginBlock\":\"Header_loginBlock__LzkuO\"};","import {profileAPI, userAPI as usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It is my first post', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n            dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(savePhotoSuccess(response.data.data.photos));\r\n            }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getUserProfile(userId));\r\n            } else {\r\n                dispatch(stopSubmit(\"edit-profile\", {\"_error\": response.data.messages[0]}));\r\n                return Promise.reject(response.data.messages[0]);\r\n            }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}